vmthread mainThread {
	
	
// song notes

	DATA16 C4
	DATA16 C#4
	DATA16 Db4
	DATA16 D4
	DATA16 D#4
	DATA16 Eb4
	DATA16 E_4
	DATA16 F4
	DATA16 F#4
	DATA16 Gb4
	DATA16 G4
	DATA16 G#4
	DATA16 Ab4
	DATA16 A4
	DATA16 A#4
	DATA16 Bb4
	DATA16 B4
	DATA16 C5
	DATA16 C#5
	DATA16 Db5
	DATA16 D5
	DATA16 D#5
	DATA16 Eb5
	DATA16 E_5
	DATA16 F5
	DATA16 F#5
	DATA16 Gb5
	DATA16 G5
	DATA16 G#5
	DATA16 Ab5
	DATA16 A5
	DATA16 A#5
	DATA16 Bb5
	DATA16 B5
	DATA16 C6

	MOVE16_16(262,C4)
	MOVE16_16(277,C#4)
	MOVE16_16(277,Db4)
	MOVE16_16(294,D4)
	MOVE16_16(311,D#4)
	MOVE16_16(311,Eb4)
	MOVE16_16(330,E_4)
	MOVE16_16(349,F4)
	MOVE16_16(370,F#4)
	MOVE16_16(370,Gb4)
	MOVE16_16(392,G4)
	MOVE16_16(415,G#4)
	MOVE16_16(415,Ab4)
	MOVE16_16(440,A4)
	MOVE16_16(466,A#4)
	MOVE16_16(466,Bb4)
	MOVE16_16(494,B4)
	MOVE16_16(523,C5)
	MOVE16_16(554,C#5)
	MOVE16_16(554,Db5)
	MOVE16_16(587,D5)
	MOVE16_16(622,D#5)
	MOVE16_16(622,Eb5)
	MOVE16_16(659,E_5)
	MOVE16_16(698,F5)
	MOVE16_16(740,F#5)
	MOVE16_16(740,Gb5)
	MOVE16_16(784,G5)
	MOVE16_16(831,G#5)
	MOVE16_16(831,Ab5)
	MOVE16_16(880,A5)
	MOVE16_16(932,A#5)
	MOVE16_16(932,Bb5)
	MOVE16_16(988,B5)
	MOVE16_16(1047,C6)


// Begin song

	song:

	SOUND(TONE,100,G4,500)
	SOUND_READY
	UI_WRITE(LED, LED_ORANGE_PULSE)
	SOUND(TONE,100,C5,300)
	UI_WRITE(LED, LED_GREEN_PULSE)
	SOUND_READY
	SOUND(TONE,100,G4,100)
	UI_WRITE(LED, LED_ORANGE_PULSE)
	SOUND_READY
	SOUND(TONE,100,C5,200)
	UI_WRITE(LED, LED_GREEN_PULSE)
	SOUND_READY
	SOUND(TONE,100,Eb5,600)
	UI_WRITE(LED, LED_ORANGE_PULSE)
	SOUND_READY
	SOUND(TONE,100,C5,600)
	UI_WRITE(LED, LED_GREEN_PULSE)
	SOUND_READY
	SOUND(TONE,100,Eb5,300)
	UI_WRITE(LED, LED_ORANGE_PULSE)
	SOUND_READY
	SOUND(TONE,100,C5,100)
	UI_WRITE(LED, LED_GREEN_PULSE)
	SOUND_READY
	SOUND(TONE,100,Eb5,200)
	UI_WRITE(LED, LED_ORANGE_PULSE)
	SOUND_READY
	SOUND(TONE,100,G5,600)
	UI_WRITE(LED, LED_GREEN_PULSE)
	SOUND_READY
	SOUND(TONE,100,Eb5,600)
	UI_WRITE(LED, LED_ORANGE_PULSE)
	SOUND_READY
	SOUND(TONE,100,G5,300)
	UI_WRITE(LED, LED_GREEN_PULSE)
	SOUND_READY
	SOUND(TONE,100,Eb5,100)
	UI_WRITE(LED, LED_ORANGE_PULSE)
	SOUND_READY
	SOUND(TONE,100,G5,200)
	UI_WRITE(LED, LED_GREEN_PULSE)
	SOUND_READY
	SOUND(TONE,100,Bb5,600)
	UI_WRITE(LED, LED_ORANGE_PULSE)
	SOUND_READY
	SOUND(TONE,100,Bb4,600)
	UI_WRITE(LED, LED_GREEN_PULSE)
	SOUND_READY
	SOUND(TONE,100,Eb5,300)
	UI_WRITE(LED, LED_ORANGE_PULSE)
	SOUND_READY
	SOUND(TONE,100,Bb4,100)
	UI_WRITE(LED, LED_GREEN_PULSE)
	SOUND_READY
	SOUND(TONE,100,Eb5,200)
	UI_WRITE(LED, LED_ORANGE_PULSE)
	SOUND_READY
	SOUND(TONE,100,G5,2000)
	UI_WRITE(LED, LED_GREEN_PULSE)
	SOUND_READY
	
	DATA8 counter
	MOVE8_8(1, counter) 

	ADD8(counter, 1, counter)
	
	JR_EQ8(counter,3,song)
// move forward six feet

	OUTPUT_POWER(0,11,50)
	OUTPUT_START(0,11)

	DATA32 timer

	TIMER_WAIT(8000,timer)
  	TIMER_READY(timer)
	
	OUTPUT_STOP(0,11,1)

// turn around 180 degrees

	OUTPUT_POWER(0,1,50)           
        OUTPUT_START(0,1)

	TIMER_WAIT(1500,timer)
        TIMER_READY(timer)
	OUTPUT_STOP(0,1,1)

// draw circle

	UI_DRAW (CIRCLE, LED_GREEN, 10, 10, 30) 

// raise and lower collection tool

	OUTPUT_POWER(0,100,50)
        OUTPUT_START(0,100)

        TIMER_WAIT(1000,timer)
        TIMER_READY(timer)
        OUTPUT_STOP(0,100,1)

	OUTPUT_POWER(0,100,-50)
        OUTPUT_START(0,100)

        TIMER_WAIT(1000,timer)
        TIMER_READY(timer)
        OUTPUT_STOP(0,100,1)

}
